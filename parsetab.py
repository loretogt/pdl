
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'rightPRINTWHILEIFRETURNINPUTrightFUNCTIONleftcorcheteAcorcheteCrightINTBOOLEANSTRINGrightVARrightigualasigleftorleftmenorleftsumarightidenterocadenaleftparentAparentCBOOLEAN FUNCTION IF INPUT INT PRINT RETURN STRING VAR WHILE asig cadena coma corcheteA corcheteC entero id igual menor or parentA parentC puntcoma sumaP : D P\n         | F P\n         | S P\n         | SC P\n         | emptyD : VAR T id puntcomaF : FUNCTION T1 id parentA A parentC corcheteA C corcheteC \n         | emptyT1 : T \n          | empty A : empty\n         | T id A1A1 : empty\n          | coma T id A1C : D C\n         | SC\n         | emptyS : IF parentA E parentC S\n         | id igual E puntcoma\n         | PRINT parentA E parentC puntcoma\n         | INPUT parentA E parentC puntcoma\n         | id parentA L parentC puntcoma\n         | RETURN XL : empty\n         | id L1L1 : empty\n         | coma id L1X : E\n         | emptySC : WHILE parentA E parentC corcheteA C corcheteC\n          | emptyE : E or T\n         | TT : T menor U\n         | UU : U suma V\n         | VV : id\n         | entero\n         | cadena\n         | parentA E parentC\n         | id parentA L parentCempty :'
    
_lr_action_items = {'FUNCTION':([0,3,5,7,8,10,14,17,19,20,21,22,23,24,25,26,56,58,59,60,65,67,71,72,73,78,79,87,95,],[6,-43,-8,6,6,6,6,-40,-38,-35,-33,-37,-23,-28,-29,-39,-41,-36,-34,-32,-19,-6,-20,-42,-22,-21,-18,-30,-7,]),'or':([17,19,20,21,22,24,26,39,40,41,49,52,53,56,58,59,60,72,],[-40,-38,-35,-33,-37,45,-39,45,45,45,45,45,45,-41,-36,-34,-32,-42,]),'RETURN':([0,3,5,7,8,10,14,17,19,20,21,22,23,24,25,26,56,58,59,60,65,67,69,71,72,73,78,79,87,95,],[3,-43,-8,3,3,3,3,-40,-38,-35,-33,-37,-23,-28,-29,-39,-41,-36,-34,-32,-19,-6,3,-20,-42,-22,-21,-18,-30,-7,]),'parentA':([1,2,3,4,6,11,12,13,15,16,18,19,28,36,37,43,44,45,50,66,91,],[15,16,18,27,18,18,36,37,18,18,18,42,18,18,18,18,18,18,66,18,18,]),'puntcoma':([17,19,20,21,22,26,49,51,55,56,58,59,60,61,68,72,],[-40,-38,-35,-33,-37,-39,65,67,71,-41,-36,-34,-32,73,78,-42,]),'corcheteA':([54,85,],[70,89,]),'menor':([17,19,20,21,22,26,30,35,56,58,59,60,72,76,94,],[-40,-38,-35,44,-37,-39,44,44,-41,-36,-34,44,-42,44,44,]),'parentC':([17,19,20,21,22,26,27,39,40,41,42,46,47,48,52,53,56,57,58,59,60,63,64,66,72,74,75,77,84,86,90,92,96,97,],[-40,-38,-35,-33,-37,-39,-43,54,55,56,-43,61,-43,-24,68,69,-41,72,-36,-34,-32,-26,-25,-43,-42,-43,85,-11,-27,-43,-12,-13,-43,-14,]),'igual':([4,],[28,]),'cadena':([3,6,11,15,16,18,28,36,37,43,44,45,66,91,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'VAR':([0,3,5,7,8,10,14,17,19,20,21,22,23,24,25,26,56,58,59,60,65,67,70,71,72,73,78,79,81,87,89,95,],[11,-43,-8,11,11,11,11,-40,-38,-35,-33,-37,-23,-28,-29,-39,-41,-36,-34,-32,-19,-6,11,-20,-42,-22,-21,-18,11,-30,11,-7,]),'WHILE':([0,3,5,7,8,10,14,17,19,20,21,22,23,24,25,26,56,58,59,60,65,67,70,71,72,73,78,79,81,87,89,95,],[1,-43,-8,1,1,1,1,-40,-38,-35,-33,-37,-23,-28,-29,-39,-41,-36,-34,-32,-19,-6,1,-20,-42,-22,-21,-18,1,-30,1,-7,]),'entero':([3,6,11,15,16,18,28,36,37,43,44,45,66,91,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'corcheteC':([67,70,80,81,82,83,87,88,89,93,],[-6,-43,87,-43,-16,-17,-30,-15,-43,95,]),'PRINT':([0,3,5,7,8,10,14,17,19,20,21,22,23,24,25,26,56,58,59,60,65,67,69,71,72,73,78,79,87,95,],[2,-43,-8,2,2,2,2,-40,-38,-35,-33,-37,-23,-28,-29,-39,-41,-36,-34,-32,-19,-6,2,-20,-42,-22,-21,-18,-30,-7,]),'INPUT':([0,3,5,7,8,10,14,17,19,20,21,22,23,24,25,26,56,58,59,60,65,67,69,71,72,73,78,79,87,95,],[12,-43,-8,12,12,12,12,-40,-38,-35,-33,-37,-23,-28,-29,-39,-41,-36,-34,-32,-19,-6,12,-20,-42,-22,-21,-18,-30,-7,]),'IF':([0,3,5,7,8,10,14,17,19,20,21,22,23,24,25,26,56,58,59,60,65,67,69,71,72,73,78,79,87,95,],[13,-43,-8,13,13,13,13,-40,-38,-35,-33,-37,-23,-28,-29,-39,-41,-36,-34,-32,-19,-6,13,-20,-42,-22,-21,-18,-30,-7,]),'coma':([47,74,86,96,],[62,62,91,91,]),'id':([0,3,5,6,7,8,10,11,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,35,36,37,42,43,44,45,56,58,59,60,62,65,66,67,69,71,72,73,76,78,79,87,91,94,95,],[4,19,-8,19,4,4,4,19,4,19,19,-40,19,-38,-35,-33,-37,-23,-28,-29,-39,47,19,50,-9,-10,51,19,19,47,19,19,19,-41,-36,-34,-32,74,-19,19,-6,4,-20,-42,-22,86,-21,-18,-30,19,96,-7,]),'suma':([17,19,20,22,26,56,58,59,72,],[-40,-38,43,-37,-39,-41,-36,43,-42,]),'$end':([0,3,5,7,8,9,10,14,17,19,20,21,22,23,24,25,26,32,33,34,38,56,58,59,60,65,67,71,72,73,78,79,87,95,],[-43,-43,-5,-43,-43,0,-43,-43,-40,-38,-35,-33,-37,-23,-28,-29,-39,-1,-2,-3,-4,-41,-36,-34,-32,-19,-6,-20,-42,-22,-21,-18,-30,-7,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'A':([66,],[75,]),'C':([70,81,89,],[80,88,93,]),'E':([3,15,16,18,28,36,37,],[24,39,40,41,49,52,53,]),'D':([0,7,8,10,14,70,81,89,],[7,7,7,7,7,81,81,81,]),'F':([0,7,8,10,14,],[8,8,8,8,8,]),'L1':([47,74,],[64,84,]),'L':([27,42,],[46,57,]),'T1':([6,],[29,]),'A1':([86,96,],[90,97,]),'P':([0,7,8,10,14,],[9,32,33,34,38,]),'S':([0,7,8,10,14,69,],[10,10,10,10,10,79,]),'U':([3,6,11,15,16,18,28,36,37,44,45,66,91,],[20,20,20,20,20,20,20,20,20,59,20,20,20,]),'T':([3,6,11,15,16,18,28,36,37,45,66,91,],[21,30,35,21,21,21,21,21,21,60,76,94,]),'V':([3,6,11,15,16,18,28,36,37,43,44,45,66,91,],[22,22,22,22,22,22,22,22,22,58,22,22,22,22,]),'SC':([0,7,8,10,14,70,81,89,],[14,14,14,14,14,82,82,82,]),'X':([3,],[23,]),'empty':([0,3,6,7,8,10,14,27,42,47,66,70,74,81,86,89,96,],[5,25,31,5,5,5,5,48,48,63,77,83,63,83,92,83,92,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> P","S'",1,None,None,None),
  ('P -> D P','P',2,'p_P','Asint.py',33),
  ('P -> F P','P',2,'p_P','Asint.py',34),
  ('P -> S P','P',2,'p_P','Asint.py',35),
  ('P -> SC P','P',2,'p_P','Asint.py',36),
  ('P -> empty','P',1,'p_P','Asint.py',37),
  ('D -> VAR T id puntcoma','D',4,'p_D','Asint.py',40),
  ('F -> FUNCTION T1 id parentA A parentC corcheteA C corcheteC','F',9,'p_F','Asint.py',48),
  ('F -> empty','F',1,'p_F','Asint.py',49),
  ('T1 -> T','T1',1,'p_T1','Asint.py',52),
  ('T1 -> empty','T1',1,'p_T1','Asint.py',53),
  ('A -> empty','A',1,'p_A','Asint.py',56),
  ('A -> T id A1','A',3,'p_A','Asint.py',57),
  ('A1 -> empty','A1',1,'p_A1','Asint.py',60),
  ('A1 -> coma T id A1','A1',4,'p_A1','Asint.py',61),
  ('C -> D C','C',2,'p_C','Asint.py',64),
  ('C -> SC','C',1,'p_C','Asint.py',65),
  ('C -> empty','C',1,'p_C','Asint.py',66),
  ('S -> IF parentA E parentC S','S',5,'p_S','Asint.py',69),
  ('S -> id igual E puntcoma','S',4,'p_S','Asint.py',70),
  ('S -> PRINT parentA E parentC puntcoma','S',5,'p_S','Asint.py',71),
  ('S -> INPUT parentA E parentC puntcoma','S',5,'p_S','Asint.py',72),
  ('S -> id parentA L parentC puntcoma','S',5,'p_S','Asint.py',73),
  ('S -> RETURN X','S',2,'p_S','Asint.py',74),
  ('L -> empty','L',1,'p_L','Asint.py',77),
  ('L -> id L1','L',2,'p_L','Asint.py',78),
  ('L1 -> empty','L1',1,'p_L1','Asint.py',81),
  ('L1 -> coma id L1','L1',3,'p_L1','Asint.py',82),
  ('X -> E','X',1,'p_X','Asint.py',85),
  ('X -> empty','X',1,'p_X','Asint.py',86),
  ('SC -> WHILE parentA E parentC corcheteA C corcheteC','SC',7,'p_SC','Asint.py',89),
  ('SC -> empty','SC',1,'p_SC','Asint.py',90),
  ('E -> E or T','E',3,'p_E','Asint.py',93),
  ('E -> T','E',1,'p_E','Asint.py',94),
  ('T -> T menor U','T',3,'p_T','Asint.py',97),
  ('T -> U','T',1,'p_T','Asint.py',98),
  ('U -> U suma V','U',3,'p_U','Asint.py',101),
  ('U -> V','U',1,'p_U','Asint.py',102),
  ('V -> id','V',1,'p_V','Asint.py',105),
  ('V -> entero','V',1,'p_V','Asint.py',106),
  ('V -> cadena','V',1,'p_V','Asint.py',107),
  ('V -> parentA E parentC','V',3,'p_V','Asint.py',108),
  ('V -> id parentA L parentC','V',4,'p_V','Asint.py',109),
  ('empty -> <empty>','empty',0,'p_empty','Asint.py',112),
]
